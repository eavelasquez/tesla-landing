---
import Logo from './Logo.astro'
---

<header
  id="landing-header"
  class="py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white"
>
  <div class="flex flex-grow basis-0">
    <Logo />
  </div>

  <nav>
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li><a href="#model-s">Model S</a></li>
      <li><a href="#model-3">Model 3</a></li>
      <li><a href="#model-x">Model X</a></li>
      <li><a href="#model-y">Model Y</a></li>
      <li><a href="#solar-roof">Solar Roof</a></li>
      <li><a href="#accessories">Accessories</a></li>
    </ul>
  </nav>

  <nav class="flex flex-grow justify-end basis-0">
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li><a href="#">Support</a></li>
      <li><a href="#">Shop</a></li>
      <li><a href="#">Account</a></li>
      <li><a href="#">Menu</a></li>
    </ul>
  </nav>

  <div
    id="menu-backdrop"
    class={`
    absolute bg-black/5 backdrop-blur-lg rounded
    translate-x-[var(--left)] translate-y-[var(--top)]
    left-0 top-0
    w-[var(--width)] h-[var(--height)]
    transition-all duration-500
    ease-in-out opacity-0 -z-10  
  `}
  >
  </div>
</header>

<script>
  const $listItem = document.querySelectorAll(
    '#landing-header li'
  ) as NodeListOf<HTMLElement>
  const $menuBackdrop = document.querySelector('#menu-backdrop') as HTMLElement

  $listItem.forEach(($item) => {
    $item.addEventListener('mouseenter', () => {
      const { left, top, width, height } = $item.getBoundingClientRect() // get the position of the hovered element

      $menuBackdrop.style.setProperty('--left', `${left}px`)
      $menuBackdrop.style.setProperty('--top', `${top}px`)
      $menuBackdrop.style.setProperty('--width', `${width}px`)
      $menuBackdrop.style.setProperty('--height', `${height}px`)

      $menuBackdrop.style.opacity = '1'
      $menuBackdrop.style.visibility = 'visible'
    })

    $item.addEventListener('mouseleave', () => {
      $menuBackdrop.style.opacity = '0'
      $menuBackdrop.style.visibility = 'hidden'
    })
  })
</script>

<script>
  const $headerEl = document.querySelector('#landing-header') as HTMLElement

  const observerOptions = {
    root: null,
    rootMargin: '0px', // when the element is visible
    threshold: 0.9 // when the element is 90% visible
  }

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry
      if (isIntersecting) {
        const color = entry.target.getAttribute('data-header-color')
        $headerEl.style.color = color
      }
    })
  }, observerOptions)

  const $sectionElements = document.querySelectorAll('.landing-section')
  $sectionElements.forEach(($section) => observer.observe($section)) // observe each section
</script>
